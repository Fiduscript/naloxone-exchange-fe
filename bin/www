#!/usr/bin/env node
"use strict";

//module dependencies
const server = require("../dist/server/server");
const debug = require("debug")("express:server");
const http = require("http");

//create http server
const httpPort = process.env.PORT || 8080;
const appServer = server.Server.bootstrap(httpPort);
const httpServer = http.createServer(appServer.app);

//listen on provided ports
httpServer.listen(httpPort);

//add error handler
httpServer.on("error", (error) => {
  if (error.syscall !== "listen") {
    throw error;
  }

  let bind = (typeof httpPort === "string") ? `Pipe ${httpPort}` : `Port ${httpPort}`;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case "EACCES":
      console.error(bind + " requires elevated privileges");
      process.exit(1);
      break;
    case "EADDRINUSE":
      console.error(bind + " is already in use");
      process.exit(1);
      break;
    default:
      throw error;
  }
});

//start listening on port
httpServer.on("listening", () => {
  let addr = httpServer.address();
  let bind = (typeof addr === "string") ? `pipe ${addr}` : `port ${addr.port}`;
  debug("Listening on " + bind);
});
